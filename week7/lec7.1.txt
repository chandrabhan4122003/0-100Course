CLIENT SIDE ROUTING
import './App.css'
import react from 'react'
import {BrowserRouter,Routes,Route,useNavigate} from 'react-router-dom'
import Dashboard from './components/Dashboard'
import Landing from './components/Landing'
function App() {
  
  return (
    <>
    
      <BrowserRouter>
      <Appbar/>
      <Routes>
        <Route path="/dashboard" element={<Dashboard/>}/>
        <Route path="/" element={<Landing/>}/>
      </Routes>
      </BrowserRouter>
    </>
  )
}
function Appbar(){
  const navigate=useNavigate();
  return <div>
        <button onClick={()=>{
            navigate("/");
        }}>Landing</button>
        <button onClick={()=>{
          navigate("/dashboard");
        }}>Dashboard</button>
      </div>
}

export default App

//Lazy loading
import './App.css'
import {lazy,Suspense} from 'react'
import React from 'react'
import {BrowserRouter,Routes,Route,useNavigate} from 'react-router-dom'
const Dashboard= lazy(()=> import('./components/Dashboard'))
const Landing=lazy(()=>import('./components/Landing'))

function App() {
  //suspense API 
  return (
    <>
    
      <BrowserRouter>
      <Appbar/>

      <Suspense fallback={<div>Loading...</div>}>
        <Routes>
          <Route path="/dashboard" element={<Dashboard />} />
          <Route path="/" element={<Landing />} />
        </Routes>
      </Suspense>
      </BrowserRouter>
    </>
  )
}
function Appbar(){
  const navigate=useNavigate();
  return <div>
        <button onClick={()=>{
            navigate("/");
        }}>Landing</button>
        <button onClick={()=>{
          navigate("/dashboard");
        }}>Dashboard</button>
      </div>
}

export default App
//prop drilling 

import {useState} from 'react'

function App() {
  const[count,setCount]=useState(0);
 
  return (
    <>
    <Count count={count}/>
    
      
    </>
  )
}

function Count({count }){
    return <div>
      {count}
      <Buttons count={count} setCount={setCount}/>
    </div> 
}
function Buttons({count,setCount}){
return <div>
  <button onClick={()=>{
    setCount(count+1)
  }}>Increase</button>
  <button onClick={()=>{
    setCount(count-1);
  }}>Decrease</button>
</div>
}
export default App


//Context api 


import {useState,useContext} from 'react'
import { CountContext } from './context';

function App() {
  const[count,setCount]=useState(0);
 
  return (
    <>
    <CountContext.Provider value={count}>
    <Count setCount={setCount}/>
    </CountContext.Provider>
    
      
    </>
  )
}

function Count({setCount}){
    return <div>
      <CountRenderer/>
      <Buttons setCount={setCount}/>
    </div> 
}
function CountRenderer(){
  const count=useContext(CountContext);
return <div>
  {count}
</div>
}
function Buttons({setCount}){
const count=useContext(CountContext)
return <div>
  <button onClick={()=>{
    setCount(count+1)
  }}>Increase</button>
  <button onClick={()=>{
    setCount(count-1);
  }}>Decrease</button>
</div>
}
export default App
